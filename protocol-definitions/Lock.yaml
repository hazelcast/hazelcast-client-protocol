id: 7
name: Lock
methods:
  - id: 1
    name: isLocked
    since: 2.0
    doc: |
      Returns whether this lock is locked or not.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            True if this lock is locked, false otherwise.
  - id: 2
    name: isLockedByCurrentThread
    since: 2.0
    doc: |
      Returns whether this lock is locked by current thread or not.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
        - name: threadId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The id of the user thread performing the operation. It is used to guarantee that only the lock holder thread (if a lock exists on the entry) can perform the requested operation.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            True if this lock is locked by current thread, false otherwise.
  - id: 3
    name: getLockCount
    since: 2.0
    doc: |
      Returns re-entrant lock hold count, regardless of lock ownership.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
    response:
      params:
        - name: response
          type: int
          nullable: false
          since: 2.0
          doc: |
            The lock hold count.
  - id: 4
    name: getRemainingLeaseTime
    since: 2.0
    doc: |
      Returns remaining lease time in milliseconds. If the lock is not locked then -1 will be returned
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
    response:
      params:
        - name: response
          type: long
          nullable: false
          since: 2.0
          doc: |
            Remaining lease time in milliseconds.
  - id: 5
    name: lock
    since: 2.0
    doc: |
      Acquires the lock for the specified lease time.After lease time, lock will be released.If the lock is not
      available then the current thread becomes disabled for thread scheduling purposes and lies dormant until the lock
      has been acquired.
    request:
      retryable: true
      acquiresResource: true
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
        - name: leaseTime
          type: long
          nullable: false
          since: 2.0
          doc: |
            Time to wait before releasing to lock
        - name: threadId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The id of the user thread performing the operation. It is used to guarantee that only the lock holder thread (if a lock exists on the entry) can perform the requested operation.
        - name: referenceId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The client-wide unique id for this request. It is used to make the request idempotent by sending the same reference id during retries.
    response: {}
  - id: 6
    name: unlock
    since: 2.0
    doc: |
      Releases the lock.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
        - name: threadId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The id of the user thread performing the operation. It is used to guarantee that only the lock holder thread (if a lock exists on the entry) can perform the requested operation.
        - name: referenceId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The client-wide unique id for this request. It is used to make the request idempotent by sending the same reference id during retries.
    response: {}
  - id: 7
    name: forceUnlock
    since: 2.0
    doc: |
      Releases the lock regardless of the lock owner. It always successfully unlocks, never blocks,
      and returns immediately.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
        - name: referenceId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The client-wide unique id for this request. It is used to make the request idempotent by sending the same reference id during retries.
    response: {}
  - id: 8
    name: tryLock
    since: 2.0
    doc: |
      Tries to acquire the lock for the specified lease time.After lease time, the lock will be released.
      If the lock is not available, then the current thread becomes disabled for thread scheduling purposes and lies
      dormant until one of two things happens: the lock is acquired by the current thread, or the specified waiting
      time elapses.
    request:
      retryable: true
      acquiresResource: true
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Lock
        - name: threadId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The id of the user thread performing the operation. It is used to guarantee that only the lock holder thread (if a lock exists on the entry) can perform the requested operation.
        - name: lease
          type: long
          nullable: false
          since: 2.0
          doc: |
            time in milliseconds to wait before releasing the lock.
        - name: timeout
          type: long
          nullable: false
          since: 2.0
          doc: |
            Maximum time to wait for the lock.
        - name: referenceId
          type: long
          nullable: false
          since: 2.0
          doc: |
            The client-wide unique id for this request. It is used to make the request idempotent by sending the same reference id during retries.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if the lock was acquired and false if the waiting time elapsed before the lock was acquired.
