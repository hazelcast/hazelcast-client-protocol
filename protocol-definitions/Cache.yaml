id: 21
name: Cache
methods:
  - id: 1
    name: addEntryListener
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: localOnly
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            if true fires events that originated from this node only, otherwise fires all events
    response:
      params:
        - name: response
          type: String
          nullable: false
          since: 2.0
          doc: |
            Registration id for the registered listener.
    events:
      - name: Cache
        params:
          - name: type
            type: int
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: keys
            type: List_CacheEventData
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: completionId
            type: int
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
  - id: 2
    name: addInvalidationListener
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: localOnly
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            if true fires events that originated from this node only, otherwise fires all events
    response:
      params:
        - name: response
          type: String
          nullable: false
          since: 2.0
          doc: |
            Registration id for the registered listener.
    events:
      - name: CacheInvalidation
        params:
          - name: name
            type: String
            nullable: false
            since: 2.0
            doc: |
              Name of the cache.
          - name: key
            type: Data
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: sourceUuid
            type: String
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: partitionUuid
            type: UUID
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sequence
            type: long
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
      - name: CacheBatchInvalidation
        params:
          - name: name
            type: String
            nullable: false
            since: 2.0
            doc: |
              Name of the cache.
          - name: keys
            type: List_Data
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sourceUuids
            type: List_String
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: partitionUuids
            type: List_UUID
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sequences
            type: List_Long
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
  - id: 3
    name: clear
    since: 2.0
    doc: |
      Clears the contents of the cache, without notifying listeners or CacheWriters.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
    response: {}
  - id: 4
    name: removeAllKeys
    since: 2.0
    doc: |
      Removes entries for the specified keys. The order in which the individual entries are removed is undefined.
      For every entry in the key set, the following are called: any registered CacheEntryRemovedListeners if the cache
      is a write-through cache, the CacheWriter. If the key set is empty, the CacheWriter is not called.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: keys
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            The keys to remove.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response: {}
  - id: 5
    name: removeAll
    since: 2.0
    doc: |
      Removes all of the mappings from this cache. The order that the individual entries are removed is undefined.
      For every mapping that exists the following are called: any registered CacheEntryRemovedListener if the cache is
      a write-through cache, the CacheWriter.If the cache is empty, the CacheWriter is not called.
      This is potentially an expensive operation as listeners are invoked. Use  #clear() to avoid this.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response: {}
  - id: 6
    name: containsKey
    since: 2.0
    doc: |
      Determines if the Cache contains an entry for the specified key. More formally, returns true if and only if this
      cache contains a mapping for a key k such that key.equals(k). (There can be at most one such mapping.)
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key whose presence in this cache is to be tested.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            Returns true if cache value for the key exists, false otherwise.
  - id: 7
    name: createConfig
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: cacheConfig
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The cache configuration. Byte-array which is serialized from an object implementing
            javax.cache.configuration.Configuration interface.
        - name: createAlsoOnOthers
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            True if the configuration shall be created on all members, false otherwise.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The created configuration object. Byte-array which is serialized from an object implementing
            javax.cache.configuration.Configuration interface.
  - id: 8
    name: destroy
    since: 2.0
    doc: |
      Closes the cache. Clears the internal content and releases any resource.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
    response: {}
  - id: 9
    name: entryProcessor
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            the key to the entry
        - name: entryProcessor
          type: Data
          nullable: false
          since: 2.0
          doc: |
            Entry processor to invoke. Byte-array which is serialized from an object implementing
            javax.cache.processor.EntryProcessor.
        - name: arguments
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            additional arguments to pass to the EntryProcessor
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the result of the processing, if any, defined by the EntryProcessor implementation
  - id: 10
    name: getAll
    since: 2.0
    doc: |
      Gets a collection of entries from the cache with custom expiry policy, returning them as Map of the values
      associated with the set of keys requested. If the cache is configured for read-through operation mode, the underlying
      configured javax.cache.integration.CacheLoader might be called to retrieve the values of the keys from any kind
      of external resource.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: keys
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            The keys whose associated values are to be returned.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Expiry policy for the entry. Byte-array which is serialized from an object implementing
            javax.cache.expiry.ExpiryPolicy interface.
    response:
      params:
        - name: response
          type: Map_Data_Data
          nullable: false
          since: 2.0
          doc: |
            A map of entries that were found for the given keys. Keys not found
            in the cache are not in the returned map.
  - id: 11
    name: getAndRemove
    since: 2.0
    doc: |
      Atomically removes the entry for a key only if currently mapped to some value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            key with which the specified value is associated
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the value if one existed or null if no mapping existed for this key
  - id: 12
    name: getAndReplace
    since: 2.0
    doc: |
      Atomically replaces the assigned value of the given key by the specified value using a custom
      javax.cache.expiry.ExpiryPolicy and returns the previously assigned value. If the cache is configured for
      write-through operation mode, the underlying configured javax.cache.integration.CacheWriter might be called to
      store the value of the key to any kind of external resource.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key whose value is replaced.
        - name: value
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The new value to be associated with the specified key.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Expiry policy for the entry. Byte-array which is serialized from an object implementing
            javax.cache.expiry.ExpiryPolicy interface.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The old value previously assigned to the given key.
  - id: 13
    name: getConfig
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache with prefix.
        - name: simpleName
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache without prefix.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The cache configuration. Byte-array which is serialized from an object implementing
            javax.cache.configuration.Configuration interface.
  - id: 14
    name: get
    since: 2.0
    doc: |
      Retrieves the mapped value of the given key using a custom javax.cache.expiry.ExpiryPolicy. If no mapping exists
      null is returned. If the cache is configured for read-through operation mode, the underlying configured
      javax.cache.integration.CacheLoader might be called to retrieve the value of the key from any kind of external resource.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key whose mapped value is to be returned.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Expiry policy for the entry. Byte-array which is serialized from an object implementing
            javax.cache.expiry.ExpiryPolicy interface.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The value assigned to the given key, or null if not assigned.
  - id: 15
    name: iterate
    since: 2.0
    doc: |
      The ordering of iteration over entries is undefined. During iteration, any entries that are a). read will have
      their appropriate CacheEntryReadListeners notified and b). removed will have their appropriate
      CacheEntryRemoveListeners notified. java.util.Iterator#next() may return null if the entry is no longer present,
      has expired or has been evicted.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: partitionId
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: tableIndex
          type: int
          nullable: false
          since: 2.0
          doc: |
            The slot number (or index) to start the iterator
        - name: batch
          type: int
          nullable: false
          since: 2.0
          doc: |
            The number of items to be batched
    response:
      params:
        - name: tableIndex
          type: int
          nullable: false
          since: 2.0
          doc: |
            The slot number (or index) to start the iterator
        - name: keys
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
  - id: 16
    name: listenerRegistration
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: listenerConfig
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The listener configuration. Byte-array which is serialized from an object implementing
            javax.cache.configuration.CacheEntryListenerConfiguration
        - name: shouldRegister
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if the listener is being registered, false if the listener is being unregistered.
        - name: address
          type: Address
          nullable: false
          since: 2.0
          doc: |
            The address of the member server for which the listener is being registered for.
    response: {}
  - id: 17
    name: loadAll
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: keys
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            the keys to load
        - name: replaceExistingValues
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            when true existing values in the Cache will
            be replaced by those loaded from a CacheLoader
    response: {}
  - id: 18
    name: managementConfig
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: isStat
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if enabling statistics, false if enabling management.
        - name: enabled
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if enabled, false to disable.
        - name: address
          type: Address
          nullable: false
          since: 2.0
          doc: |
            the address of the host to enable.
    response: {}
  - id: 19
    name: putIfAbsent
    since: 2.0
    doc: |
      Associates the specified key with the given value if and only if there is not yet a mapping defined for the
      specified key. If the cache is configured for write-through operation mode, the underlying configured
      javax.cache.integration.CacheWriter might be called to store the value of the key to any kind of external resource.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key that is associated with the specified value.
        - name: value
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The value that has the specified key associated with it.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The custom expiry policy for this operation.
            A null value is equivalent to put(Object, Object).
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if a value was set, false otherwise.
  - id: 20
    name: put
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key that has the specified value associated with it.
        - name: value
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The value to be associated with the key.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Expiry policy for the entry. Byte-array which is serialized from an object implementing
            javax.cache.expiry.ExpiryPolicy interface.
        - name: get
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            boolean flag indicating if the previous value should be retrieved.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The value previously assigned to the given key, or null if not assigned.
  - id: 21
    name: removeEntryListener
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: registrationId
          type: String
          nullable: false
          since: 2.0
          doc: |
            The id assigned during the registration for the listener which shall be removed.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if the listener is de-registered, false otherwise
  - id: 22
    name: removeInvalidationListener
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: registrationId
          type: String
          nullable: false
          since: 2.0
          doc: |
            The id assigned during the registration for the listener which shall be removed.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if the listener is de-registered, false otherwise
  - id: 23
    name: remove
    since: 2.0
    doc: |
      Atomically removes the mapping for a key only if currently mapped to the given value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            key whose mapping is to be removed from the cache
        - name: currentValue
          type: Data
          nullable: true
          since: 2.0
          doc: |
            value expected to be associated with the specified key.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            returns false if there was no matching key
  - id: 24
    name: replace
    since: 2.0
    doc: |
      Atomically replaces the currently assigned value for the given key with the specified newValue if and only if the
      currently assigned value equals the value of oldValue using a custom javax.cache.expiry.ExpiryPolicy
      If the cache is configured for write-through operation mode, the underlying configured
      javax.cache.integration.CacheWriter might be called to store the value of the key to any kind of external resource.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: key
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: key
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The key whose value is replaced.
        - name: oldValue
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Old value to match if exists before removing. Null means "don't try to remove"
        - name: newValue
          type: Data
          nullable: false
          since: 2.0
          doc: |
            The new value to be associated with the specified key.
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            Expiry policy for the entry. Byte-array which is serialized from an object implementing
            javax.cache.expiry.ExpiryPolicy interface.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            User generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            The replaced value.
  - id: 25
    name: size
    since: 2.0
    doc: |
      Total entry count
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
    response:
      params:
        - name: response
          type: int
          nullable: false
          since: 2.0
          doc: |
            total entry count
  - id: 26
    name: addPartitionLostListener
    since: 2.0
    doc: |
      Adds a CachePartitionLostListener. The addPartitionLostListener returns a registration ID. This ID is needed to remove the
      CachePartitionLostListener using the #removePartitionLostListener(String) method. There is no check for duplicate
      registrations, so if you register the listener twice, it will get events twice.Listeners registered from
      HazelcastClient may miss some of the cache partition lost events due to design limitations.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache
        - name: localOnly
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            if true only node that has the partition sends the request, if false
            sends all partition lost events.
    response:
      params:
        - name: response
          type: String
          nullable: false
          since: 2.0
          doc: |
            returns the registration id for the CachePartitionLostListener.
    events:
      - name: CachePartitionLost
        params:
          - name: partitionId
            type: int
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: uuid
            type: String
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
  - id: 27
    name: removePartitionLostListener
    since: 2.0
    doc: |
      Removes the specified cache partition lost listener. Returns silently if there is no such listener added before
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the Cache
        - name: registrationId
          type: String
          nullable: false
          since: 2.0
          doc: |
            ID of registered listener.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if registration is removed, false otherwise.
  - id: 28
    name: putAll
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            name of the cache
        - name: entries
          type: Map_Data_Data
          nullable: false
          since: 2.0
          doc: |
            entries to be put as batch
        - name: expiryPolicy
          type: Data
          nullable: true
          since: 2.0
          doc: |
            expiry policy for the entry. Byte-array which is serialized from an object implementing
            {@link javax.cache.expiry.ExpiryPolicy} interface.
        - name: completionId
          type: int
          nullable: false
          since: 2.0
          doc: |
            user generated id which shall be received as a field of the cache event upon completion of
            the request in the cluster.
    response: {}
  - id: 29
    name: iterateEntries
    since: 2.0
    doc: |
      Fetches specified number of entries from the specified partition starting from specified table index.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: partitionId
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: tableIndex
          type: int
          nullable: false
          since: 2.0
          doc: |
            The slot number (or index) to start the iterator
        - name: batch
          type: int
          nullable: false
          since: 2.0
          doc: |
            The number of items to be batched
    response:
      params:
        - name: tableIndex
          type: int
          nullable: false
          since: 2.0
          doc: |
            The slot number (or index) to start the iterator
        - name: entries
          type: Map_Data_Data
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
  - id: 30
    name: addNearCacheInvalidationListener
    since: 2.0
    doc: |
      Adds listener to cache. This listener will be used to listen near cache invalidation events.
      Eventually consistent client near caches should use this method to add invalidation listeners
      instead of {@link #addInvalidationListener(String, boolean)}
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the cache.
        - name: localOnly
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            if true fires events that originated from this node only, otherwise fires all events
    response:
      params:
        - name: response
          type: String
          nullable: false
          since: 2.0
          doc: |
            Registration id for the registered listener.
    events:
      - name: CacheInvalidation
        params:
          - name: name
            type: String
            nullable: false
            since: 2.0
            doc: |
              Name of the cache.
          - name: key
            type: Data
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: sourceUuid
            type: String
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: partitionUuid
            type: UUID
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sequence
            type: long
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
      - name: CacheBatchInvalidation
        params:
          - name: name
            type: String
            nullable: false
            since: 2.0
            doc: |
              Name of the cache.
          - name: keys
            type: List_Data
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sourceUuids
            type: List_String
            nullable: true
            since: 2.0
            doc: |
              TODO DOC
          - name: partitionUuids
            type: List_UUID
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
          - name: sequences
            type: List_Long
            nullable: false
            since: 2.0
            doc: |
              TODO DOC
  - id: 31
    name: fetchNearCacheInvalidationMetadata
    since: 2.0
    doc: |
      Fetches invalidation metadata from partitions of map.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: names
          type: List_String
          nullable: false
          since: 2.0
          doc: |
            names of the caches
        - name: address
          type: Address
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
    response:
      params:
        - name: namePartitionSequenceList
          type: Map_String_Map_Integer_Long
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
        - name: partitionUuidList
          type: Map_Integer_UUID
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
  - id: 32
    name: assignAndGetUuids
    since: 2.0
    doc: |
      TODO DOC
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
    response:
      params:
        - name: partitionUuidList
          type: Map_Integer_UUID
          nullable: false
          since: 2.0
          doc: |
            partitionId to assigned uuid entry list
  - id: 33
    name: eventJournalSubscribe
    since: 2.0
    doc: |
      Performs the initial subscription to the cache event journal.
      This includes retrieving the event journal sequences of the
      oldest and newest event in the journal.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: partitionId
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            name of the cache
    response:
      params:
        - name: oldestSequence
          type: long
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
        - name: newestSequence
          type: long
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
  - id: 34
    name: eventJournalRead
    since: 2.0
    doc: |
      Reads from the cache event journal in batches. You may specify the start sequence,
      the minimum required number of items in the response, the maximum number of items
      in the response, a predicate that the events should pass and a projection to
      apply to the events in the journal.
      If the event journal currently contains less events than {@code minSize}, the
      call will wait until it has sufficient items.
      The predicate, filter and projection may be {@code null} in which case all elements are returned
      and no projection is applied.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: partitionId
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            name of the cache
        - name: startSequence
          type: long
          nullable: false
          since: 2.0
          doc: |
            the startSequence of the first item to read
        - name: minSize
          type: int
          nullable: false
          since: 2.0
          doc: |
            the minimum number of items to read.
        - name: maxSize
          type: int
          nullable: false
          since: 2.0
          doc: |
            the maximum number of items to read.
        - name: predicate
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the predicate to apply before processing events
        - name: projection
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the projection to apply to journal events
    response:
      params:
        - name: readCount
          type: int
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
        - name: items
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
        - name: itemSeqs
          type: longArray
          nullable: true
          since: 2.0
          doc: |
            TODO DOC
        - name: nextSeq
          type: long
          nullable: false
          since: 2.0
          doc: |
            TODO DOC
  - id: 35
    name: setExpiryPolicy
    since: 2.0
    doc: |
      Associates the specified key with the given {@link javax.cache.expiry.ExpiryPolicy}.
      {@code expiryPolicy} takes precedence for these particular {@code keys} against any cache wide expiry policy.
      If some keys in {@code keys} do not exist or are already expired, this call has no effect for those.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            name of the cache
        - name: keys
          type: List_Data
          nullable: false
          since: 2.0
          doc: |
            The keys that are associated with the specified expiry policy.
        - name: expiryPolicy
          type: Data
          nullable: false
          since: 2.0
          doc: |
            custom expiry policy for this operation
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            {
