id: 11
name: AtomicReference
methods:
  - id: 1
    name: apply
    since: 2.0
    doc: |
      Applies a function on the value, the actual stored value will not change.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: function
          type: Data
          nullable: false
          since: 2.0
          doc: |
            the function applied on the value, the stored value does not change
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the result of the function application
  - id: 2
    name: alter
    since: 2.0
    doc: |
      Alters the currently stored reference by applying a function on it.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: function
          type: Data
          nullable: false
          since: 2.0
          doc: |
            the function that alters the currently stored reference
    response: {}
  - id: 3
    name: alterAndGet
    since: 2.0
    doc: |
      Alters the currently stored reference by applying a function on it and gets the result.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: function
          type: Data
          nullable: false
          since: 2.0
          doc: |
            the function that alters the currently stored reference
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value, the result of the applied function.
  - id: 4
    name: getAndAlter
    since: 2.0
    doc: |
      Alters the currently stored reference by applying a function on it on and gets the old value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: function
          type: Data
          nullable: false
          since: 2.0
          doc: |
            the function that alters the currently stored reference
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the old value, the value before the function is applied
  - id: 5
    name: contains
    since: 2.0
    doc: |
      Checks if the reference contains the value.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: expected
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the value to check (is allowed to be null).
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if the value is found, false otherwise.
  - id: 6
    name: compareAndSet
    since: 2.0
    doc: |
      Atomically sets the value to the given updated value only if the current value the expected value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: expected
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the expected value
        - name: updated
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if successful; or false if the actual value
            was not equal to the expected value.
  - id: 8
    name: get
    since: 2.0
    doc: |
      Gets the current value.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the current value
  - id: 9
    name: set
    since: 2.0
    doc: |
      Atomically sets the given value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: newValue
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value
    response: {}
  - id: 10
    name: clear
    since: 2.0
    doc: |
      Clears the current stored reference.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
    response: {}
  - id: 11
    name: getAndSet
    since: 2.0
    doc: |
      Gets the old value and sets the new value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: newValue
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value.
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the old value.
  - id: 12
    name: setAndGet
    since: 2.0
    doc: |
      Sets and gets the value.
    request:
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
        - name: newValue
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value
    response:
      params:
        - name: response
          type: Data
          nullable: true
          since: 2.0
          doc: |
            the new value
  - id: 13
    name: isNull
    since: 2.0
    doc: |
      Checks if the stored reference is null.
    request:
      retryable: true
      acquiresResource: false
      partitionIdentifier: name
      params:
        - name: name
          type: String
          nullable: false
          since: 2.0
          doc: |
            Name of the AtomicReference distributed object instance.
    response:
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2.0
          doc: |
            true if null, false otherwise.
