id: 3
name: Queue
ns: Hazelcast.Client.Protocol.Codec
methods:
  - name: offer
    doc: >
      Inserts the specified element into this queue, waiting up to the specified
      wait time if necessary for space to

      become available.
    request:
      id: 769
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: value
          type: Data
          nullable: false
          since: 2
          doc: |
            The element to add
        - name: timeoutMillis
          type: long
          nullable: false
          since: 2
          doc: >
            Maximum time in milliseconds to wait for acquiring the lock for the
            key.
    response:
      id: 101
      doc: >
        <tt>True</tt> if the element was added to this queue, else <tt>false</tt>
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: put
    doc: >
      Inserts the specified element into this queue, waiting if necessary for
      space to become available.
    request:
      id: 770
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: value
          type: Data
          nullable: false
          since: 2
          doc: |
            The element to add
    response:
      id: 100
      doc: |
        TODO DOC
  - name: size
    doc: >
      Returns the number of elements in this collection.  If this collection
      contains more than Integer.MAX_VALUE

      elements, returns Integer.MAX_VALUE
    request:
      id: 771
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 102
      doc: |
        The number of elements in this collection
      params:
        - name: response
          type: int
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: remove
    doc: >
      Retrieves and removes the head of this queue.  This method differs from
      poll only in that it throws an exception

      if this queue is empty.
    request:
      id: 772
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: value
          type: Data
          nullable: false
          since: 2
          doc: |
            Element to be removed from this queue, if present
    response:
      id: 101
      doc: |
        <tt>true</tt> if this queue changed as a result of the call
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: poll
    doc: >
      Retrieves and removes the head of this queue, waiting up to the specified
      wait time if necessary for an element

      to become available.
    request:
      id: 773
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: timeoutMillis
          type: long
          nullable: false
          since: 2
          doc: >
            Maximum time in milliseconds to wait for acquiring the lock for the
            key.
    response:
      id: 105
      doc: |
        The head of this queue, or <tt>null</tt> if this queue is empty
      params:
        - name: response
          type: Data
          nullable: true
          since: 2
          doc: |
            TODO DOC
  - name: take
    doc: >
      Retrieves and removes the head of this queue, waiting if necessary until
      an element becomes available.
    request:
      id: 774
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 105
      doc: |
        The head of this queue
      params:
        - name: response
          type: Data
          nullable: true
          since: 2
          doc: |
            TODO DOC
  - name: peek
    doc: >
      Retrieves, but does not remove, the head of this queue, or returns null if
      this queue is empty.
    request:
      id: 775
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 105
      doc: |
        The head of this queue, or <tt>null</tt> if this queue is empty
      params:
        - name: response
          type: Data
          nullable: true
          since: 2
          doc: |
            TODO DOC
  - name: iterator
    doc: >
      Returns an iterator over the elements in this collection.  There are no
      guarantees concerning the order in which

      the elements are returned (unless this collection is an instance of some class that provides a guarantee).
    request:
      id: 776
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 106
      doc: |
        list of all data in queue
      params:
        - name: response
          type: List_Data
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: drainTo
    doc: >
      Removes all available elements from this queue and adds them to the given
      collection.  This operation may be more

      efficient than repeatedly polling this queue.  A failure encountered while attempting to add elements to

      collection c may result in elements being in neither, either or both collections when the associated exception is

      thrown. Attempts to drain a queue to itself result in ILLEGAL_ARGUMENT. Further, the behavior of

      this operation is undefined if the specified collection is modified while the operation is in progress.
    request:
      id: 777
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 106
      doc: |
        list of all removed data in queue
      params:
        - name: response
          type: List_Data
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: drainToMaxSize
    doc: >
      Removes at most the given number of available elements from this queue and
      adds them to the given collection.

      A failure encountered while attempting to add elements to collection may result in elements being in neither,

      either or both collections when the associated exception is thrown. Attempts to drain a queue to itself result in

      ILLEGAL_ARGUMENT. Further, the behavior of this operation is undefined if the specified collection is

      modified while the operation is in progress.
    request:
      id: 778
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: maxSize
          type: int
          nullable: false
          since: 2
          doc: |
            The maximum number of elements to transfer
    response:
      id: 106
      doc: |
        list of all removed data in result of this method
      params:
        - name: response
          type: List_Data
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: contains
    doc: >
      Returns true if this queue contains the specified element. More formally,
      returns true if and only if this queue

      contains at least one element e such that value.equals(e)
    request:
      id: 779
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: value
          type: Data
          nullable: false
          since: 2
          doc: |
            Element whose presence in this collection is to be tested
    response:
      id: 101
      doc: |
        <tt>true</tt> if this collection contains the specified element
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: containsAll
    doc: >
      Return true if this collection contains all of the elements in the
      specified collection.
    request:
      id: 780
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: dataList
          type: List_Data
          nullable: false
          since: 2
          doc: |
            Collection to be checked for containment in this collection
    response:
      id: 101
      doc: >
        <tt>true</tt> if this collection contains all of the elements in the
        specified collection
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: compareAndRemoveAll
    doc: >
      Removes all of this collection's elements that are also contained in the
      specified collection (optional operation).

      After this call returns, this collection will contain no elements in common with the specified collection.
    request:
      id: 781
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: dataList
          type: List_Data
          nullable: false
          since: 2
          doc: |
            Collection containing elements to be removed from this collection
    response:
      id: 101
      doc: |
        <tt>true</tt> if this collection changed as a result of the call
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: compareAndRetainAll
    doc: >
      Retains only the elements in this collection that are contained in the
      specified collection (optional operation).

      In other words, removes from this collection all of its elements that are not contained in the specified collection.
    request:
      id: 782
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: dataList
          type: List_Data
          nullable: false
          since: 2
          doc: |
            collection containing elements to be retained in this collection
    response:
      id: 101
      doc: |
        <tt>true</tt> if this collection changed as a result of the call
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: clear
    doc: >
      Removes all of the elements from this collection (optional operation). The
      collection will be empty after this

      method returns.
    request:
      id: 783
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 100
      doc: |
        TODO DOC
  - name: addAll
    doc: >
      Adds all of the elements in the specified collection to this collection
      (optional operation).The behavior of this

      operation is undefined if the specified collection is modified while the operation is in progress.

      (This implies that the behavior of this call is undefined if the specified collection is this collection,

      and this collection is nonempty.)
    request:
      id: 784
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: dataList
          type: List_Data
          nullable: false
          since: 2
          doc: |
            Collection containing elements to be added to this collection
    response:
      id: 101
      doc: |
        <tt>true</tt> if this collection changed as a result of the call
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: addListener
    doc: >
      Adds an listener for this collection. Listener will be notified or all
      collection add/remove events.
    request:
      id: 785
      retryable: false
      acquiresResource: false
      partitionIdentifier: -1
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: includeValue
          type: boolean
          nullable: false
          since: 2
          doc: >
            <tt>true</tt> if the updated item should be passed to the item
            listener, <tt>false</tt> otherwise.
        - name: localOnly
          type: boolean
          nullable: false
          since: 2
          doc: >
            if true fires events that originated from this node only, otherwise
            fires all events
    response:
      id: 104
      doc: |
        The registration id
      params:
        - name: response
          type: String
          nullable: false
          since: 2
          doc: |
            TODO DOC
    events:
      - id: 204
        name: Item
        params:
          - name: item
            type: Data
            nullable: true
            since: 2
            doc: |
              TODO DOC
          - name: uuid
            type: String
            nullable: false
            since: 2
            doc: |
              TODO DOC
          - name: eventType
            type: int
            nullable: false
            since: 2
            doc: |
              TODO DOC
  - name: removeListener
    doc: >
      Removes the specified item listener.Returns silently if the specified
      listener was not added before.
    request:
      id: 786
      retryable: true
      acquiresResource: false
      partitionIdentifier: -1
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
        - name: registrationId
          type: String
          nullable: false
          since: 2
          doc: |
            Id of the listener registration.
    response:
      id: 101
      doc: |
        True if the item listener is removed, false otherwise
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: remainingCapacity
    doc: >
      Returns the number of additional elements that this queue can ideally (in
      the absence of memory or resource

      constraints) accept without blocking, or Integer.MAX_VALUE if there is no intrinsic limit. Note that you cannot

      always tell if an attempt to insert an element will succeed by inspecting remainingCapacity because it may be

      the case that another thread is about to insert or remove an element.
    request:
      id: 787
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 102
      doc: |
        The remaining capacity
      params:
        - name: response
          type: int
          nullable: false
          since: 2
          doc: |
            TODO DOC
  - name: isEmpty
    doc: |
      Returns true if this collection contains no elements.
    request:
      id: 788
      retryable: false
      acquiresResource: false
      partitionIdentifier: name
      since: 2
      params:
        - name: name
          type: String
          nullable: false
          since: 2
          doc: |
            Name of the Queue
    response:
      id: 101
      doc: |
        <tt>True</tt> if this collection contains no elements
      params:
        - name: response
          type: boolean
          nullable: false
          since: 2
          doc: |
            TODO DOC
